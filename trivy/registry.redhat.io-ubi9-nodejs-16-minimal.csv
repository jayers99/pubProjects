PkgName	VulnerabilityID	Title	Description	Severity	CVSS.nvd.V3Score	CVSS.redhat.V3Score
nodejs	CVE-2021-22884	nodejs: DNS rebinding in --inspect	Node.js before 10.24.0, 12.21.0, 14.16.0, and 15.10.0 is vulnerable to DNS rebinding attacks as the whitelist includes “localhost6”. When “localhost6” is not present in /etc/hosts, it is just an ordinary domain that is resolved via DNS, i.e., over network. If the attacker controls the victim's DNS server or can spoof its responses, the DNS rebinding protection can be bypassed by using the “localhost6” domain. As long as the attacker uses the “localhost6” domain, they can still apply the attack described in CVE-2018-7160.	MEDIUM	7.5	7.5
nodejs	CVE-2021-27290	nodejs-ssri: Regular expression DoS (ReDoS) when parsing malicious SRI in strict mode	ssri 5.2.2-8.0.0, fixed in 8.0.1, processes SRIs using a regular expression which is vulnerable to a denial of service. Malicious SRIs could take an extremely long time to process, leading to denial of service. This issue only affects consumers using the strict option.	MEDIUM	7.5	7.5
nodejs	CVE-2021-3807	nodejs-ansi-regex: Regular expression denial of service (ReDoS) matching ANSI escape codes	ansi-regex is vulnerable to Inefficient Regular Expression Complexity	MEDIUM	7.5	7.5
nodejs	CVE-2021-3918	nodejs-json-schema: Prototype pollution vulnerability	json-schema is vulnerable to Improperly Controlled Modification of Object Prototype Attributes ('Prototype Pollution')	MEDIUM	9.8	9.8
nodejs	CVE-2021-44531	nodejs: Improper handling of URI Subject Alternative Names	Accepting arbitrary Subject Alternative Name (SAN) types, unless a PKI is specifically defined to use a particular SAN type, can result in bypassing name-constrained intermediates. Node.js < 12.22.9, < 14.18.3, < 16.13.2, and < 17.3.1 was accepting URI SAN types, which PKIs are often not defined to use. Additionally, when a protocol allows URI SANs, Node.js did not match the URI correctly.Versions of Node.js with the fix for this disable the URI SAN type when checking a certificate against a hostname. This behavior can be reverted through the --security-revert command-line option.	MEDIUM	7.4	7.4
nodejs	CVE-2021-44532	nodejs: Certificate Verification Bypass via String Injection	Node.js < 12.22.9, < 14.18.3, < 16.13.2, and < 17.3.1 converts SANs (Subject Alternative Names) to a string format. It uses this string to check peer certificates against hostnames when validating connections. The string format was subject to an injection vulnerability when name constraints were used within a certificate chain, allowing the bypass of these name constraints.Versions of Node.js with the fix for this escape SANs containing the problematic characters in order to prevent the injection. This behavior can be reverted through the --security-revert command-line option.	MEDIUM	5.3	7.4
nodejs	CVE-2021-44533	nodejs: Incorrect handling of certificate subject and issuer fields	Node.js < 12.22.9, < 14.18.3, < 16.13.2, and < 17.3.1 did not handle multi-value Relative Distinguished Names correctly. Attackers could craft certificate subjects containing a single-value Relative Distinguished Name that would be interpreted as a multi-value Relative Distinguished Name, for example, in order to inject a Common Name that would allow bypassing the certificate subject verification.Affected versions of Node.js that do not accept multi-value Relative Distinguished Names and are thus not vulnerable to such attacks themselves. However, third-party code that uses node's ambiguous presentation of certificate subjects may be vulnerable.	MEDIUM	5.3	7.4
nodejs	CVE-2021-44906	minimist: prototype pollution	Minimist <=1.2.5 is vulnerable to Prototype Pollution via file index.js, function setKey() (lines 69-95).	MEDIUM	9.8	5.6
nodejs	CVE-2022-29244	nodejs: npm pack ignores root-level .gitignore and .npmignore file exclusion directives when run in a workspace	npm pack ignores root-level .gitignore and .npmignore file exclusion directives when run in a workspace or with a workspace flag (ie. `--workspaces`, `--workspace=<name>`). Anyone who has run `npm pack` or `npm publish` inside a workspace, as of v7.9.0 and v7.13.0 respectively, may be affected and have published files into the npm registry they did not intend to include. Users should upgrade to the latest, patched version of npm v8.11.0, run: npm i -g npm@latest . Node.js versions v16.15.1, v17.19.1, and v18.3.0 include the patched v8.11.0 version of npm.	MEDIUM	7.5	7.5
nodejs	CVE-2022-32212	nodejs: DNS rebinding in --inspect via invalid IP addresses	A OS Command Injection vulnerability exists in Node.js versions <14.20.0, <16.20.0, <18.5.0 due to an insufficient IsAllowedHost check that can easily be bypassed because IsIPAddress does not properly check if an IP address is invalid before making DBS requests allowing rebinding attacks.	MEDIUM	8.1	null
nodejs	CVE-2022-32213	nodejs: HTTP request smuggling due to flawed parsing of Transfer-Encoding	The llhttp parser in the http module in Node.js v17.x does not correctly parse and validate Transfer-Encoding headers and can lead to HTTP Request Smuggling (HRS).	MEDIUM	9.1	null
nodejs	CVE-2022-32214	nodejs: HTTP request smuggling due to improper delimiting of header fields	The llhttp parser in the http module in Node.js does not strictly use the CRLF sequence to delimit HTTP requests. This can lead to HTTP Request Smuggling (HRS).	MEDIUM	9.1	null
nodejs	CVE-2022-32215	nodejs: HTTP request smuggling due to incorrect parsing of multi-line Transfer-Encoding	The llhttp parser in the http module in Node v17.6.0 does not correctly handle multi-line Transfer-Encoding headers. This can lead to HTTP Request Smuggling (HRS).	MEDIUM	9.1	null
nodejs	CVE-2021-22959	llhttp: HTTP Request Smuggling due to spaces in headers	The parser in accepts requests with a space (SP) right after the header name before the colon. This can lead to HTTP Request Smuggling (HRS) in llhttp < v2.1.4 and < v6.0.6.	LOW	6.5	6.1
nodejs	CVE-2021-22960	llhttp: HTTP Request Smuggling when parsing the body of chunked requests	The parse function in llhttp < 2.1.4 and < 6.0.6. ignores chunk extensions when parsing the body of chunked requests. This leads to HTTP Request Smuggling (HRS) under certain conditions.	LOW	6.5	6.1
nodejs	CVE-2022-21824	nodejs: Prototype pollution via console.table properties	Due to the formatting logic of the "console.table()" function it was not safe to allow user controlled input to be passed to the "properties" parameter while simultaneously passing a plain object with at least one property as the first parameter, which could be "__proto__". The prototype pollution has very limited control, in that it only allows an empty string to be assigned to numerical keys of the object prototype.Node.js >= 12.22.9, >= 14.18.3, >= 16.13.2, and >= 17.3.1 use a null protoype for the object these properties are being assigned to.	LOW	8.2	8.2
nodejs-docs	CVE-2021-22884	nodejs: DNS rebinding in --inspect	Node.js before 10.24.0, 12.21.0, 14.16.0, and 15.10.0 is vulnerable to DNS rebinding attacks as the whitelist includes “localhost6”. When “localhost6” is not present in /etc/hosts, it is just an ordinary domain that is resolved via DNS, i.e., over network. If the attacker controls the victim's DNS server or can spoof its responses, the DNS rebinding protection can be bypassed by using the “localhost6” domain. As long as the attacker uses the “localhost6” domain, they can still apply the attack described in CVE-2018-7160.	MEDIUM	7.5	7.5
nodejs-docs	CVE-2021-27290	nodejs-ssri: Regular expression DoS (ReDoS) when parsing malicious SRI in strict mode	ssri 5.2.2-8.0.0, fixed in 8.0.1, processes SRIs using a regular expression which is vulnerable to a denial of service. Malicious SRIs could take an extremely long time to process, leading to denial of service. This issue only affects consumers using the strict option.	MEDIUM	7.5	7.5
nodejs-docs	CVE-2021-3807	nodejs-ansi-regex: Regular expression denial of service (ReDoS) matching ANSI escape codes	ansi-regex is vulnerable to Inefficient Regular Expression Complexity	MEDIUM	7.5	7.5
nodejs-docs	CVE-2021-3918	nodejs-json-schema: Prototype pollution vulnerability	json-schema is vulnerable to Improperly Controlled Modification of Object Prototype Attributes ('Prototype Pollution')	MEDIUM	9.8	9.8
nodejs-docs	CVE-2021-44531	nodejs: Improper handling of URI Subject Alternative Names	Accepting arbitrary Subject Alternative Name (SAN) types, unless a PKI is specifically defined to use a particular SAN type, can result in bypassing name-constrained intermediates. Node.js < 12.22.9, < 14.18.3, < 16.13.2, and < 17.3.1 was accepting URI SAN types, which PKIs are often not defined to use. Additionally, when a protocol allows URI SANs, Node.js did not match the URI correctly.Versions of Node.js with the fix for this disable the URI SAN type when checking a certificate against a hostname. This behavior can be reverted through the --security-revert command-line option.	MEDIUM	7.4	7.4
nodejs-docs	CVE-2021-44532	nodejs: Certificate Verification Bypass via String Injection	Node.js < 12.22.9, < 14.18.3, < 16.13.2, and < 17.3.1 converts SANs (Subject Alternative Names) to a string format. It uses this string to check peer certificates against hostnames when validating connections. The string format was subject to an injection vulnerability when name constraints were used within a certificate chain, allowing the bypass of these name constraints.Versions of Node.js with the fix for this escape SANs containing the problematic characters in order to prevent the injection. This behavior can be reverted through the --security-revert command-line option.	MEDIUM	5.3	7.4
nodejs-docs	CVE-2021-44533	nodejs: Incorrect handling of certificate subject and issuer fields	Node.js < 12.22.9, < 14.18.3, < 16.13.2, and < 17.3.1 did not handle multi-value Relative Distinguished Names correctly. Attackers could craft certificate subjects containing a single-value Relative Distinguished Name that would be interpreted as a multi-value Relative Distinguished Name, for example, in order to inject a Common Name that would allow bypassing the certificate subject verification.Affected versions of Node.js that do not accept multi-value Relative Distinguished Names and are thus not vulnerable to such attacks themselves. However, third-party code that uses node's ambiguous presentation of certificate subjects may be vulnerable.	MEDIUM	5.3	7.4
nodejs-docs	CVE-2021-44906	minimist: prototype pollution	Minimist <=1.2.5 is vulnerable to Prototype Pollution via file index.js, function setKey() (lines 69-95).	MEDIUM	9.8	5.6
nodejs-docs	CVE-2022-29244	nodejs: npm pack ignores root-level .gitignore and .npmignore file exclusion directives when run in a workspace	npm pack ignores root-level .gitignore and .npmignore file exclusion directives when run in a workspace or with a workspace flag (ie. `--workspaces`, `--workspace=<name>`). Anyone who has run `npm pack` or `npm publish` inside a workspace, as of v7.9.0 and v7.13.0 respectively, may be affected and have published files into the npm registry they did not intend to include. Users should upgrade to the latest, patched version of npm v8.11.0, run: npm i -g npm@latest . Node.js versions v16.15.1, v17.19.1, and v18.3.0 include the patched v8.11.0 version of npm.	MEDIUM	7.5	7.5
nodejs-docs	CVE-2022-32212	nodejs: DNS rebinding in --inspect via invalid IP addresses	A OS Command Injection vulnerability exists in Node.js versions <14.20.0, <16.20.0, <18.5.0 due to an insufficient IsAllowedHost check that can easily be bypassed because IsIPAddress does not properly check if an IP address is invalid before making DBS requests allowing rebinding attacks.	MEDIUM	8.1	null
nodejs-docs	CVE-2022-32213	nodejs: HTTP request smuggling due to flawed parsing of Transfer-Encoding	The llhttp parser in the http module in Node.js v17.x does not correctly parse and validate Transfer-Encoding headers and can lead to HTTP Request Smuggling (HRS).	MEDIUM	9.1	null
nodejs-docs	CVE-2022-32214	nodejs: HTTP request smuggling due to improper delimiting of header fields	The llhttp parser in the http module in Node.js does not strictly use the CRLF sequence to delimit HTTP requests. This can lead to HTTP Request Smuggling (HRS).	MEDIUM	9.1	null
nodejs-docs	CVE-2022-32215	nodejs: HTTP request smuggling due to incorrect parsing of multi-line Transfer-Encoding	The llhttp parser in the http module in Node v17.6.0 does not correctly handle multi-line Transfer-Encoding headers. This can lead to HTTP Request Smuggling (HRS).	MEDIUM	9.1	null
nodejs-docs	CVE-2021-22959	llhttp: HTTP Request Smuggling due to spaces in headers	The parser in accepts requests with a space (SP) right after the header name before the colon. This can lead to HTTP Request Smuggling (HRS) in llhttp < v2.1.4 and < v6.0.6.	LOW	6.5	6.1
nodejs-docs	CVE-2021-22960	llhttp: HTTP Request Smuggling when parsing the body of chunked requests	The parse function in llhttp < 2.1.4 and < 6.0.6. ignores chunk extensions when parsing the body of chunked requests. This leads to HTTP Request Smuggling (HRS) under certain conditions.	LOW	6.5	6.1
nodejs-docs	CVE-2022-21824	nodejs: Prototype pollution via console.table properties	Due to the formatting logic of the "console.table()" function it was not safe to allow user controlled input to be passed to the "properties" parameter while simultaneously passing a plain object with at least one property as the first parameter, which could be "__proto__". The prototype pollution has very limited control, in that it only allows an empty string to be assigned to numerical keys of the object prototype.Node.js >= 12.22.9, >= 14.18.3, >= 16.13.2, and >= 17.3.1 use a null protoype for the object these properties are being assigned to.	LOW	8.2	8.2
nodejs-full-i18n	CVE-2021-22884	nodejs: DNS rebinding in --inspect	Node.js before 10.24.0, 12.21.0, 14.16.0, and 15.10.0 is vulnerable to DNS rebinding attacks as the whitelist includes “localhost6”. When “localhost6” is not present in /etc/hosts, it is just an ordinary domain that is resolved via DNS, i.e., over network. If the attacker controls the victim's DNS server or can spoof its responses, the DNS rebinding protection can be bypassed by using the “localhost6” domain. As long as the attacker uses the “localhost6” domain, they can still apply the attack described in CVE-2018-7160.	MEDIUM	7.5	7.5
nodejs-full-i18n	CVE-2021-27290	nodejs-ssri: Regular expression DoS (ReDoS) when parsing malicious SRI in strict mode	ssri 5.2.2-8.0.0, fixed in 8.0.1, processes SRIs using a regular expression which is vulnerable to a denial of service. Malicious SRIs could take an extremely long time to process, leading to denial of service. This issue only affects consumers using the strict option.	MEDIUM	7.5	7.5
nodejs-full-i18n	CVE-2021-3807	nodejs-ansi-regex: Regular expression denial of service (ReDoS) matching ANSI escape codes	ansi-regex is vulnerable to Inefficient Regular Expression Complexity	MEDIUM	7.5	7.5
nodejs-full-i18n	CVE-2021-3918	nodejs-json-schema: Prototype pollution vulnerability	json-schema is vulnerable to Improperly Controlled Modification of Object Prototype Attributes ('Prototype Pollution')	MEDIUM	9.8	9.8
nodejs-full-i18n	CVE-2021-44531	nodejs: Improper handling of URI Subject Alternative Names	Accepting arbitrary Subject Alternative Name (SAN) types, unless a PKI is specifically defined to use a particular SAN type, can result in bypassing name-constrained intermediates. Node.js < 12.22.9, < 14.18.3, < 16.13.2, and < 17.3.1 was accepting URI SAN types, which PKIs are often not defined to use. Additionally, when a protocol allows URI SANs, Node.js did not match the URI correctly.Versions of Node.js with the fix for this disable the URI SAN type when checking a certificate against a hostname. This behavior can be reverted through the --security-revert command-line option.	MEDIUM	7.4	7.4
nodejs-full-i18n	CVE-2021-44532	nodejs: Certificate Verification Bypass via String Injection	Node.js < 12.22.9, < 14.18.3, < 16.13.2, and < 17.3.1 converts SANs (Subject Alternative Names) to a string format. It uses this string to check peer certificates against hostnames when validating connections. The string format was subject to an injection vulnerability when name constraints were used within a certificate chain, allowing the bypass of these name constraints.Versions of Node.js with the fix for this escape SANs containing the problematic characters in order to prevent the injection. This behavior can be reverted through the --security-revert command-line option.	MEDIUM	5.3	7.4
nodejs-full-i18n	CVE-2021-44533	nodejs: Incorrect handling of certificate subject and issuer fields	Node.js < 12.22.9, < 14.18.3, < 16.13.2, and < 17.3.1 did not handle multi-value Relative Distinguished Names correctly. Attackers could craft certificate subjects containing a single-value Relative Distinguished Name that would be interpreted as a multi-value Relative Distinguished Name, for example, in order to inject a Common Name that would allow bypassing the certificate subject verification.Affected versions of Node.js that do not accept multi-value Relative Distinguished Names and are thus not vulnerable to such attacks themselves. However, third-party code that uses node's ambiguous presentation of certificate subjects may be vulnerable.	MEDIUM	5.3	7.4
nodejs-full-i18n	CVE-2021-44906	minimist: prototype pollution	Minimist <=1.2.5 is vulnerable to Prototype Pollution via file index.js, function setKey() (lines 69-95).	MEDIUM	9.8	5.6
nodejs-full-i18n	CVE-2022-29244	nodejs: npm pack ignores root-level .gitignore and .npmignore file exclusion directives when run in a workspace	npm pack ignores root-level .gitignore and .npmignore file exclusion directives when run in a workspace or with a workspace flag (ie. `--workspaces`, `--workspace=<name>`). Anyone who has run `npm pack` or `npm publish` inside a workspace, as of v7.9.0 and v7.13.0 respectively, may be affected and have published files into the npm registry they did not intend to include. Users should upgrade to the latest, patched version of npm v8.11.0, run: npm i -g npm@latest . Node.js versions v16.15.1, v17.19.1, and v18.3.0 include the patched v8.11.0 version of npm.	MEDIUM	7.5	7.5
nodejs-full-i18n	CVE-2022-32212	nodejs: DNS rebinding in --inspect via invalid IP addresses	A OS Command Injection vulnerability exists in Node.js versions <14.20.0, <16.20.0, <18.5.0 due to an insufficient IsAllowedHost check that can easily be bypassed because IsIPAddress does not properly check if an IP address is invalid before making DBS requests allowing rebinding attacks.	MEDIUM	8.1	null
nodejs-full-i18n	CVE-2022-32213	nodejs: HTTP request smuggling due to flawed parsing of Transfer-Encoding	The llhttp parser in the http module in Node.js v17.x does not correctly parse and validate Transfer-Encoding headers and can lead to HTTP Request Smuggling (HRS).	MEDIUM	9.1	null
nodejs-full-i18n	CVE-2022-32214	nodejs: HTTP request smuggling due to improper delimiting of header fields	The llhttp parser in the http module in Node.js does not strictly use the CRLF sequence to delimit HTTP requests. This can lead to HTTP Request Smuggling (HRS).	MEDIUM	9.1	null
nodejs-full-i18n	CVE-2022-32215	nodejs: HTTP request smuggling due to incorrect parsing of multi-line Transfer-Encoding	The llhttp parser in the http module in Node v17.6.0 does not correctly handle multi-line Transfer-Encoding headers. This can lead to HTTP Request Smuggling (HRS).	MEDIUM	9.1	null
nodejs-full-i18n	CVE-2021-22959	llhttp: HTTP Request Smuggling due to spaces in headers	The parser in accepts requests with a space (SP) right after the header name before the colon. This can lead to HTTP Request Smuggling (HRS) in llhttp < v2.1.4 and < v6.0.6.	LOW	6.5	6.1
nodejs-full-i18n	CVE-2021-22960	llhttp: HTTP Request Smuggling when parsing the body of chunked requests	The parse function in llhttp < 2.1.4 and < 6.0.6. ignores chunk extensions when parsing the body of chunked requests. This leads to HTTP Request Smuggling (HRS) under certain conditions.	LOW	6.5	6.1
nodejs-full-i18n	CVE-2022-21824	nodejs: Prototype pollution via console.table properties	Due to the formatting logic of the "console.table()" function it was not safe to allow user controlled input to be passed to the "properties" parameter while simultaneously passing a plain object with at least one property as the first parameter, which could be "__proto__". The prototype pollution has very limited control, in that it only allows an empty string to be assigned to numerical keys of the object prototype.Node.js >= 12.22.9, >= 14.18.3, >= 16.13.2, and >= 17.3.1 use a null protoype for the object these properties are being assigned to.	LOW	8.2	8.2
nodejs-libs	CVE-2021-22884	nodejs: DNS rebinding in --inspect	Node.js before 10.24.0, 12.21.0, 14.16.0, and 15.10.0 is vulnerable to DNS rebinding attacks as the whitelist includes “localhost6”. When “localhost6” is not present in /etc/hosts, it is just an ordinary domain that is resolved via DNS, i.e., over network. If the attacker controls the victim's DNS server or can spoof its responses, the DNS rebinding protection can be bypassed by using the “localhost6” domain. As long as the attacker uses the “localhost6” domain, they can still apply the attack described in CVE-2018-7160.	MEDIUM	7.5	7.5
nodejs-libs	CVE-2021-27290	nodejs-ssri: Regular expression DoS (ReDoS) when parsing malicious SRI in strict mode	ssri 5.2.2-8.0.0, fixed in 8.0.1, processes SRIs using a regular expression which is vulnerable to a denial of service. Malicious SRIs could take an extremely long time to process, leading to denial of service. This issue only affects consumers using the strict option.	MEDIUM	7.5	7.5
nodejs-libs	CVE-2021-3807	nodejs-ansi-regex: Regular expression denial of service (ReDoS) matching ANSI escape codes	ansi-regex is vulnerable to Inefficient Regular Expression Complexity	MEDIUM	7.5	7.5
nodejs-libs	CVE-2021-3918	nodejs-json-schema: Prototype pollution vulnerability	json-schema is vulnerable to Improperly Controlled Modification of Object Prototype Attributes ('Prototype Pollution')	MEDIUM	9.8	9.8
nodejs-libs	CVE-2021-44531	nodejs: Improper handling of URI Subject Alternative Names	Accepting arbitrary Subject Alternative Name (SAN) types, unless a PKI is specifically defined to use a particular SAN type, can result in bypassing name-constrained intermediates. Node.js < 12.22.9, < 14.18.3, < 16.13.2, and < 17.3.1 was accepting URI SAN types, which PKIs are often not defined to use. Additionally, when a protocol allows URI SANs, Node.js did not match the URI correctly.Versions of Node.js with the fix for this disable the URI SAN type when checking a certificate against a hostname. This behavior can be reverted through the --security-revert command-line option.	MEDIUM	7.4	7.4
nodejs-libs	CVE-2021-44532	nodejs: Certificate Verification Bypass via String Injection	Node.js < 12.22.9, < 14.18.3, < 16.13.2, and < 17.3.1 converts SANs (Subject Alternative Names) to a string format. It uses this string to check peer certificates against hostnames when validating connections. The string format was subject to an injection vulnerability when name constraints were used within a certificate chain, allowing the bypass of these name constraints.Versions of Node.js with the fix for this escape SANs containing the problematic characters in order to prevent the injection. This behavior can be reverted through the --security-revert command-line option.	MEDIUM	5.3	7.4
nodejs-libs	CVE-2021-44533	nodejs: Incorrect handling of certificate subject and issuer fields	Node.js < 12.22.9, < 14.18.3, < 16.13.2, and < 17.3.1 did not handle multi-value Relative Distinguished Names correctly. Attackers could craft certificate subjects containing a single-value Relative Distinguished Name that would be interpreted as a multi-value Relative Distinguished Name, for example, in order to inject a Common Name that would allow bypassing the certificate subject verification.Affected versions of Node.js that do not accept multi-value Relative Distinguished Names and are thus not vulnerable to such attacks themselves. However, third-party code that uses node's ambiguous presentation of certificate subjects may be vulnerable.	MEDIUM	5.3	7.4
nodejs-libs	CVE-2021-44906	minimist: prototype pollution	Minimist <=1.2.5 is vulnerable to Prototype Pollution via file index.js, function setKey() (lines 69-95).	MEDIUM	9.8	5.6
nodejs-libs	CVE-2022-29244	nodejs: npm pack ignores root-level .gitignore and .npmignore file exclusion directives when run in a workspace	npm pack ignores root-level .gitignore and .npmignore file exclusion directives when run in a workspace or with a workspace flag (ie. `--workspaces`, `--workspace=<name>`). Anyone who has run `npm pack` or `npm publish` inside a workspace, as of v7.9.0 and v7.13.0 respectively, may be affected and have published files into the npm registry they did not intend to include. Users should upgrade to the latest, patched version of npm v8.11.0, run: npm i -g npm@latest . Node.js versions v16.15.1, v17.19.1, and v18.3.0 include the patched v8.11.0 version of npm.	MEDIUM	7.5	7.5
nodejs-libs	CVE-2022-32212	nodejs: DNS rebinding in --inspect via invalid IP addresses	A OS Command Injection vulnerability exists in Node.js versions <14.20.0, <16.20.0, <18.5.0 due to an insufficient IsAllowedHost check that can easily be bypassed because IsIPAddress does not properly check if an IP address is invalid before making DBS requests allowing rebinding attacks.	MEDIUM	8.1	null
nodejs-libs	CVE-2022-32213	nodejs: HTTP request smuggling due to flawed parsing of Transfer-Encoding	The llhttp parser in the http module in Node.js v17.x does not correctly parse and validate Transfer-Encoding headers and can lead to HTTP Request Smuggling (HRS).	MEDIUM	9.1	null
nodejs-libs	CVE-2022-32214	nodejs: HTTP request smuggling due to improper delimiting of header fields	The llhttp parser in the http module in Node.js does not strictly use the CRLF sequence to delimit HTTP requests. This can lead to HTTP Request Smuggling (HRS).	MEDIUM	9.1	null
nodejs-libs	CVE-2022-32215	nodejs: HTTP request smuggling due to incorrect parsing of multi-line Transfer-Encoding	The llhttp parser in the http module in Node v17.6.0 does not correctly handle multi-line Transfer-Encoding headers. This can lead to HTTP Request Smuggling (HRS).	MEDIUM	9.1	null
nodejs-libs	CVE-2021-22959	llhttp: HTTP Request Smuggling due to spaces in headers	The parser in accepts requests with a space (SP) right after the header name before the colon. This can lead to HTTP Request Smuggling (HRS) in llhttp < v2.1.4 and < v6.0.6.	LOW	6.5	6.1
nodejs-libs	CVE-2021-22960	llhttp: HTTP Request Smuggling when parsing the body of chunked requests	The parse function in llhttp < 2.1.4 and < 6.0.6. ignores chunk extensions when parsing the body of chunked requests. This leads to HTTP Request Smuggling (HRS) under certain conditions.	LOW	6.5	6.1
nodejs-libs	CVE-2022-21824	nodejs: Prototype pollution via console.table properties	Due to the formatting logic of the "console.table()" function it was not safe to allow user controlled input to be passed to the "properties" parameter while simultaneously passing a plain object with at least one property as the first parameter, which could be "__proto__". The prototype pollution has very limited control, in that it only allows an empty string to be assigned to numerical keys of the object prototype.Node.js >= 12.22.9, >= 14.18.3, >= 16.13.2, and >= 17.3.1 use a null protoype for the object these properties are being assigned to.	LOW	8.2	8.2
nodejs-nodemon	CVE-2021-33502	normalize-url: ReDoS for data URLs	The normalize-url package before 4.5.1, 5.x before 5.3.1, and 6.x before 6.0.1 for Node.js has a ReDoS (regular expression denial of service) issue because it has exponential performance for data: URLs.	MEDIUM	7.5	7.5
nodejs-nodemon	CVE-2021-3807	nodejs-ansi-regex: Regular expression denial of service (ReDoS) matching ANSI escape codes	ansi-regex is vulnerable to Inefficient Regular Expression Complexity	MEDIUM	7.5	7.5
nodejs-nodemon	CVE-2021-44906	minimist: prototype pollution	Minimist <=1.2.5 is vulnerable to Prototype Pollution via file index.js, function setKey() (lines 69-95).	MEDIUM	9.8	5.6
nodejs-nodemon	CVE-2022-33987	got: missing verification of requested URLs allows redirects to UNIX sockets	The got package before 12.1.0 (also fixed in 11.8.5) for Node.js allows a redirect to a UNIX socket.	MEDIUM	5.3	5.3
nodejs-nodemon	CVE-2020-28469	nodejs-glob-parent: Regular expression denial of service	This affects the package glob-parent before 5.1.2. The enclosure regex used to check for strings ending in enclosure containing path separator.	LOW	7.5	7.5
npm	CVE-2021-22884	nodejs: DNS rebinding in --inspect	Node.js before 10.24.0, 12.21.0, 14.16.0, and 15.10.0 is vulnerable to DNS rebinding attacks as the whitelist includes “localhost6”. When “localhost6” is not present in /etc/hosts, it is just an ordinary domain that is resolved via DNS, i.e., over network. If the attacker controls the victim's DNS server or can spoof its responses, the DNS rebinding protection can be bypassed by using the “localhost6” domain. As long as the attacker uses the “localhost6” domain, they can still apply the attack described in CVE-2018-7160.	MEDIUM	7.5	7.5
npm	CVE-2021-27290	nodejs-ssri: Regular expression DoS (ReDoS) when parsing malicious SRI in strict mode	ssri 5.2.2-8.0.0, fixed in 8.0.1, processes SRIs using a regular expression which is vulnerable to a denial of service. Malicious SRIs could take an extremely long time to process, leading to denial of service. This issue only affects consumers using the strict option.	MEDIUM	7.5	7.5
npm	CVE-2021-3807	nodejs-ansi-regex: Regular expression denial of service (ReDoS) matching ANSI escape codes	ansi-regex is vulnerable to Inefficient Regular Expression Complexity	MEDIUM	7.5	7.5
npm	CVE-2021-3918	nodejs-json-schema: Prototype pollution vulnerability	json-schema is vulnerable to Improperly Controlled Modification of Object Prototype Attributes ('Prototype Pollution')	MEDIUM	9.8	9.8
npm	CVE-2021-44531	nodejs: Improper handling of URI Subject Alternative Names	Accepting arbitrary Subject Alternative Name (SAN) types, unless a PKI is specifically defined to use a particular SAN type, can result in bypassing name-constrained intermediates. Node.js < 12.22.9, < 14.18.3, < 16.13.2, and < 17.3.1 was accepting URI SAN types, which PKIs are often not defined to use. Additionally, when a protocol allows URI SANs, Node.js did not match the URI correctly.Versions of Node.js with the fix for this disable the URI SAN type when checking a certificate against a hostname. This behavior can be reverted through the --security-revert command-line option.	MEDIUM	7.4	7.4
npm	CVE-2021-44532	nodejs: Certificate Verification Bypass via String Injection	Node.js < 12.22.9, < 14.18.3, < 16.13.2, and < 17.3.1 converts SANs (Subject Alternative Names) to a string format. It uses this string to check peer certificates against hostnames when validating connections. The string format was subject to an injection vulnerability when name constraints were used within a certificate chain, allowing the bypass of these name constraints.Versions of Node.js with the fix for this escape SANs containing the problematic characters in order to prevent the injection. This behavior can be reverted through the --security-revert command-line option.	MEDIUM	5.3	7.4
npm	CVE-2021-44533	nodejs: Incorrect handling of certificate subject and issuer fields	Node.js < 12.22.9, < 14.18.3, < 16.13.2, and < 17.3.1 did not handle multi-value Relative Distinguished Names correctly. Attackers could craft certificate subjects containing a single-value Relative Distinguished Name that would be interpreted as a multi-value Relative Distinguished Name, for example, in order to inject a Common Name that would allow bypassing the certificate subject verification.Affected versions of Node.js that do not accept multi-value Relative Distinguished Names and are thus not vulnerable to such attacks themselves. However, third-party code that uses node's ambiguous presentation of certificate subjects may be vulnerable.	MEDIUM	5.3	7.4
npm	CVE-2021-44906	minimist: prototype pollution	Minimist <=1.2.5 is vulnerable to Prototype Pollution via file index.js, function setKey() (lines 69-95).	MEDIUM	9.8	5.6
npm	CVE-2022-29244	nodejs: npm pack ignores root-level .gitignore and .npmignore file exclusion directives when run in a workspace	npm pack ignores root-level .gitignore and .npmignore file exclusion directives when run in a workspace or with a workspace flag (ie. `--workspaces`, `--workspace=<name>`). Anyone who has run `npm pack` or `npm publish` inside a workspace, as of v7.9.0 and v7.13.0 respectively, may be affected and have published files into the npm registry they did not intend to include. Users should upgrade to the latest, patched version of npm v8.11.0, run: npm i -g npm@latest . Node.js versions v16.15.1, v17.19.1, and v18.3.0 include the patched v8.11.0 version of npm.	MEDIUM	7.5	7.5
npm	CVE-2022-32212	nodejs: DNS rebinding in --inspect via invalid IP addresses	A OS Command Injection vulnerability exists in Node.js versions <14.20.0, <16.20.0, <18.5.0 due to an insufficient IsAllowedHost check that can easily be bypassed because IsIPAddress does not properly check if an IP address is invalid before making DBS requests allowing rebinding attacks.	MEDIUM	8.1	null
npm	CVE-2022-32213	nodejs: HTTP request smuggling due to flawed parsing of Transfer-Encoding	The llhttp parser in the http module in Node.js v17.x does not correctly parse and validate Transfer-Encoding headers and can lead to HTTP Request Smuggling (HRS).	MEDIUM	9.1	null
npm	CVE-2022-32214	nodejs: HTTP request smuggling due to improper delimiting of header fields	The llhttp parser in the http module in Node.js does not strictly use the CRLF sequence to delimit HTTP requests. This can lead to HTTP Request Smuggling (HRS).	MEDIUM	9.1	null
npm	CVE-2022-32215	nodejs: HTTP request smuggling due to incorrect parsing of multi-line Transfer-Encoding	The llhttp parser in the http module in Node v17.6.0 does not correctly handle multi-line Transfer-Encoding headers. This can lead to HTTP Request Smuggling (HRS).	MEDIUM	9.1	null
npm	CVE-2021-22959	llhttp: HTTP Request Smuggling due to spaces in headers	The parser in accepts requests with a space (SP) right after the header name before the colon. This can lead to HTTP Request Smuggling (HRS) in llhttp < v2.1.4 and < v6.0.6.	LOW	6.5	6.1
npm	CVE-2021-22960	llhttp: HTTP Request Smuggling when parsing the body of chunked requests	The parse function in llhttp < 2.1.4 and < 6.0.6. ignores chunk extensions when parsing the body of chunked requests. This leads to HTTP Request Smuggling (HRS) under certain conditions.	LOW	6.5	6.1
npm	CVE-2022-21824	nodejs: Prototype pollution via console.table properties	Due to the formatting logic of the "console.table()" function it was not safe to allow user controlled input to be passed to the "properties" parameter while simultaneously passing a plain object with at least one property as the first parameter, which could be "__proto__". The prototype pollution has very limited control, in that it only allows an empty string to be assigned to numerical keys of the object prototype.Node.js >= 12.22.9, >= 14.18.3, >= 16.13.2, and >= 17.3.1 use a null protoype for the object these properties are being assigned to.	LOW	8.2	8.2
tar	CVE-2005-2541	tar: does not properly warn the user when extracting setuid or setgid files	Tar 1.15.1 does not properly warn the user when extracting setuid or setgid files, which may allow local users or remote attackers to gain privileges.	MEDIUM	null	7
